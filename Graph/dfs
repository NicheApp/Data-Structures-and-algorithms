#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

void addnode(vector<int> graph[],int u, int v)
{
graph[u].push_back(v);
}
void dfs(vector<int> graph[], vector<bool> &visited,stack<int> st)
{

if(!st.empty())
{

int s=st.top();
cout<<s<<" ";

for(auto it: graph[s])
{
if(!visited[it])
{
visited[it]=true;
st.push(it);
dfs(graph,visited,st);

}

}
st.pop();
}

}
void dfsutil(vector<int> graph[], int v,int start)
{
vector<bool> visited(v,false);
stack<int> st;
st.push(start);
visited[start]=true;
dfs(graph,visited,st);

}


int main()
{
std::ios::sync_with_stdio(false);
cin.tie(NULL);
int V,e,e1,e2;
cin>>V;
vector<int> graph[V];
cin>>e;
for(int i=0;i<e;i++)
{
cin>>e1>>e2;
addnode(graph,e1,e2);
}

dfsutil(graph,V,0);
return 0;
}
