#include<bits/stdc++.h>
using namespace std;
typedef long long ll;

void addnode(vector<int> graph[],int u, int v)
{
graph[u].push_back(v);
}

void dfs(vector<int> graph[], int v,int start)
{
vector<bool> visited(v,false);
list<int> adj;
adj.push_back(start);
visited[start]=true;
 while(!adj.empty())
 {

int k = adj.front();
cout<<k<<endl;
adj.pop_front();

for(auto it: graph[k])
{
if(!visited[it])
{
visited[it]=true;
adj.push_back(it);
}
}
}

}

int main()
{
std::ios::sync_with_stdio(false);
cin.tie(NULL);
int V,e,e1,e2;
cin>>V;
vector<int> graph[V];
cin>>e;
for(int i=0;i<e;i++)
{
cin>>e1>>e2;
addnode(graph,e1,e2);
}

dfs(graph,V,2);


return 0;
}
